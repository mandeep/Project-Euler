"""
Project: Project Euler - Problem 56: Powerful Digit Sum
Author: Mandeep Bhutani
Date: 3/13/2015

Problem:The sequence of triangle numbers is generated by adding the natural
numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55,...
Let us list the factors of the first seven triangle numbers:
1: 1
3: 1,3
6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred
divisors?
"""


def find_divisors(n):
    result = []
    for i in xrange(1, n + 1):
        if n % i == 0:
            result.append(i)
    return result


def find_triangular():
    for x in xrange(0, 5000):
        number = int(x * (x + 1) / 2)
        if len(find_divisors(number)) > 500:
            return number


print find_triangular()